@model ERMA.Models.ProjectViewModel.VMGroupProject

@{
    ViewBag.Title = "Managing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "ProjectGroupToProject", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Project Permissions</h2>
        <hr />
        <p>
            @Html.ActionLink("Back to List", "Index", "ProjectGroup")&nbsp;|&nbsp;
            @Html.ActionLink("Requisitioners", "Index", "ProjectGroupToRequisitioner", new { PGID = Model.PGID.ToString() }, null)

        </p>@Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.PrjGroup.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PrjGroup.Name)
                @Html.HiddenFor(model => model.PGID, htmlAttributes: new { @id = "ProjectGroupToProjectPGID" })
            </dd>

        </dl>
        <dl class="dl-horizontal">
            <dt>Select Project Status</dt>
            <dd>
                @Html.RadioButtonFor(model => model.ProjectStatusText, "ALL", htmlAttributes: new { @id = "optProjectStatusAll" }) All &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.ProjectStatusText, "ACTIVE", htmlAttributes: new { @id = "optProjectStatusActive" }) Active &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.ProjectStatusText, "INACTIVE", htmlAttributes: new { @id = "optProjectStatusInactive" }) Inactive
            </dd>
        </dl>

        <div class="form-group">
            <div class="control-label col-md-2">
                <label>Select Project</label>
            </div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedProject, Model.CboProjectsNotInGroup, htmlAttributes: new { @class = "form-control", @id = "ddProjectGroupToProjectList" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" id="btnProjectGroupToProjectSubmit" />
            </div>
        </div>
    </div>
}


<div id="checkboxes">
    <table class="table table-striped">
        
        <tr>
            <th>
                @using (Html.BeginForm("DeleteAll", "ProjectGroupToProject", FormMethod.Get))
                {
                    @Html.HiddenFor(model => model.PGID, htmlAttributes: new { @id = "ProjectGroupToProjectDeleteAllPGID" })

                    <input type="submit" value="Delete All" class="btn btn-default" id="btnProjectGroupToProjectRemoveAll" />
                }
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectList[0].Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectList[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectList[0].StatusDesc)
            </th>
        </tr>
        @foreach (var item in Model.ProjectInGroupList)
        {
            <tr>
                <td>
                    @{
                        foreach (var rec in Model.GrpProjectList)
                        {
                            if (item.Code == rec.ProjectID)
                            {
                                using (Html.BeginForm("Delete", "ProjectGroupToProject", FormMethod.Get, new { id = string.Format("form{0}{1}", Model.PGID, item.Code) }))
                                {
                                    @Html.HiddenFor(modelVM => Model.PGID)
                                    @Html.HiddenFor(modelVM => item.Code)
                                    @Html.HiddenFor(modelVM => rec.MNPGID)
                                    @Html.HiddenFor(modelVM => item.StatusDesc)

                                    if (ViewBag.GetFocus == "chk" + Model.PGID + item.Code)
                                    {
                                        @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, rec.ProjectID), true, new { onclick = "this.form.submit();", @autofocus = "autofocus" })
                                    }
                                    else
                                    {
                                        @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, rec.ProjectID), true, new { onclick = "this.form.submit();" })
                                    }
                                }
                                break;
                            }
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(model => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(model => item.StatusDesc)
                </td>
            </tr>

        }
    </table>
</div>


