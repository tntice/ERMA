@model ERMA.Models.ProjectViewModel.VMGroupProject
@using ERMA.Code;

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h4>Project Group to Project Assignment</h4>
    <hr />
    <p>
        @Html.ActionLink("Back to List", "Index", "ProjectGroup")
    </p>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.PrjGroup.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PrjGroup.Name)
        </dd>

    </dl>

    <div id="checkboxes">
        <table class="table table-striped">
            @*<tr>
                    <th colspan="3">
                        <input type="text" ng-model="filt" />
                    </th>
                </tr>*@
            <tr>
                <th>
                    <input id="chMNGroupProjectAll" type="checkbox" class="checkbox" /> All
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectList[0].Code)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectList[0].Description)
                </th>
            </tr>
            @foreach (var item in Model.ProjectList)
            {
                <tr>
                    <td>
                        @{
                            bool blnFound = false;
                            foreach (var rec in Model.GrpProjectList)
                            {
                                blnFound = false;
                                if (item.Code == rec.ProjectID)
                                {
                                    blnFound = true;
                                    using (Html.BeginForm("DeleteList", "MNGroupProject", FormMethod.Get, new { id = string.Format("form{0}{1}", Model.PGID, item.Code) }))
                                    {
                                        @Html.HiddenFor(modelVM => Model.PGID)
                                        @Html.HiddenFor(modelVM => item.Code)
                                        @Html.HiddenFor(modelVM => rec.MNPGID)
                                        

                                        if (ViewBag.GetFocus == "chk" + Model.PGID + item.Code)
                                        {
                                            @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, rec.ProjectID), true, new { onclick = "this.form.submit();", @autofocus = "autofocus" })
                                        }
                                        else
                                        {
                                            @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, rec.ProjectID), true, new { onclick = "this.form.submit();" })
                                        }
                                    }
                                    break;
                                }
                            }
                            if (!(blnFound))
                            {
                                using (Html.BeginForm("CreateList", "MNGroupProject", FormMethod.Get, new { id = string.Format("form{0}{1}", Model.PGID, item.Code) }))
                                {
                                    @Html.HiddenFor(modelVM => Model.PGID)
                                    @Html.HiddenFor(modelVM => item.Code)
                                    if (ViewBag.GetFocus == "chk" + Model.PGID + item.Code)
                                    {
                                        @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, item.Code), false, new { onclick = "this.form.submit();", @autofocus = "autofocus" })
                                    }
                                    else
                                    {
                                        @Html.CheckBox(string.Format("chk{0}{1}", Model.PGID, item.Code), false, new { onclick = "this.form.submit();" })

                                    }
                                }
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Description)
                    </td>
                </tr>

            }
        </table>
    </div>
</div>
<div>
    @Html.PageLinks(Model.PGID, Model.PagingInfo, x => Url.Action("List", new { page = x}))
</div>

